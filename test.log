[2023-10-31 22:47:57,455] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2023-10-31 22:47:59,844] [WARNING] [runner.py:203:fetch_hostfile] Unable to find hostfile, will proceed with training with local resources only.
[2023-10-31 22:47:59,907] [INFO] [runner.py:570:main] cmd = /home/liao.629/miniconda3/envs/attack/bin/python -u -m deepspeed.launcher.launch --world_info=eyJsb2NhbGhvc3QiOiBbMiwgM119 --master_addr=127.0.0.1 --master_port=29500 --enable_each_rank_log=None test.py
[2023-10-31 22:48:01,305] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2023-10-31 22:48:02,908] [INFO] [launch.py:145:main] WORLD INFO DICT: {'localhost': [2, 3]}
[2023-10-31 22:48:02,908] [INFO] [launch.py:151:main] nnodes=1, num_local_procs=2, node_rank=0
[2023-10-31 22:48:02,908] [INFO] [launch.py:162:main] global_rank_mapping=defaultdict(<class 'list'>, {'localhost': [0, 1]})
[2023-10-31 22:48:02,909] [INFO] [launch.py:163:main] dist_world_size=2
[2023-10-31 22:48:02,909] [INFO] [launch.py:165:main] Setting CUDA_VISIBLE_DEVICES=2,3
[2023-10-31 22:48:05,037] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2023-10-31 22:48:05,119] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2023-10-31 22:48:06,246] [INFO] [comm.py:637:init_distributed] cdb=None
[2023-10-31 22:48:06,391] [INFO] [comm.py:637:init_distributed] cdb=None
[2023-10-31 22:48:06,391] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
[2023-10-31 22:48:13,720] [INFO] [partition_parameters.py:347:__exit__] finished initializing model - num_params = 558, num_elems = 2.85B
[2023-10-31 22:48:21,474] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed info: version=0.11.1, git-hash=unknown, git-branch=unknown
[2023-10-31 22:48:21,486] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed Flops Profiler Enabled: False
[2023-10-31 22:48:21,489] [INFO] [logging.py:96:log_dist] [Rank 0] Creating ZeRO Offload
[2023-10-31 22:48:21,542] [INFO] [utils.py:802:see_memory_usage] DeepSpeedZeRoOffload initialize [begin]
[2023-10-31 22:48:21,542] [INFO] [utils.py:803:see_memory_usage] MA 5.31 GB         Max_MA 5.8 GB         CA 10.94 GB         Max_CA 11 GB 
[2023-10-31 22:48:21,543] [INFO] [utils.py:810:see_memory_usage] CPU Virtual Memory:  used = 34.91 GB, percent = 3.5%
Parameter Offload: Total persistent parameters: 251904 in 124 params
[2023-10-31 22:48:21,609] [INFO] [utils.py:802:see_memory_usage] DeepSpeedZeRoOffload initialize [end]
[2023-10-31 22:48:21,609] [INFO] [utils.py:803:see_memory_usage] MA 5.31 GB         Max_MA 5.31 GB         CA 10.94 GB         Max_CA 11 GB 
[2023-10-31 22:48:21,610] [INFO] [utils.py:810:see_memory_usage] CPU Virtual Memory:  used = 34.91 GB, percent = 3.5%
[2023-10-31 22:48:21,612] [INFO] [config.py:968:print] DeepSpeedEngine configuration:
[2023-10-31 22:48:21,612] [INFO] [config.py:972:print]   activation_checkpointing_config  {
    "partition_activations": false, 
    "contiguous_memory_optimization": false, 
    "cpu_checkpointing": false, 
    "number_checkpoints": null, 
    "synchronize_checkpoint_boundary": false, 
    "profile": false
}
[2023-10-31 22:48:21,613] [INFO] [config.py:972:print]   aio_config ................... {'block_size': 1048576, 'queue_depth': 8, 'thread_count': 1, 'single_submit': False, 'overlap_events': True}
[2023-10-31 22:48:21,613] [INFO] [config.py:972:print]   amp_enabled .................. False
[2023-10-31 22:48:21,614] [INFO] [config.py:972:print]   amp_params ................... False
[2023-10-31 22:48:21,614] [INFO] [config.py:972:print]   autotuning_config ............ {
    "enabled": false, 
    "start_step": null, 
    "end_step": null, 
    "metric_path": null, 
    "arg_mappings": null, 
    "metric": "throughput", 
    "model_info": null, 
    "results_dir": "autotuning_results", 
    "exps_dir": "autotuning_exps", 
    "overwrite": true, 
    "fast": true, 
    "start_profile_step": 3, 
    "end_profile_step": 5, 
    "tuner_type": "gridsearch", 
    "tuner_early_stopping": 5, 
    "tuner_num_trials": 50, 
    "model_info_path": null, 
    "mp_size": 1, 
    "max_train_batch_size": null, 
    "min_train_batch_size": 1, 
    "max_train_micro_batch_size_per_gpu": 1.024000e+03, 
    "min_train_micro_batch_size_per_gpu": 1, 
    "num_tuning_micro_batch_sizes": 3
}
[2023-10-31 22:48:21,615] [INFO] [config.py:972:print]   bfloat16_enabled ............. False
[2023-10-31 22:48:21,616] [INFO] [config.py:972:print]   checkpoint_parallel_write_pipeline  False
[2023-10-31 22:48:21,616] [INFO] [config.py:972:print]   checkpoint_tag_validation_enabled  True
[2023-10-31 22:48:21,617] [INFO] [config.py:972:print]   checkpoint_tag_validation_fail  False
[2023-10-31 22:48:21,617] [INFO] [config.py:972:print]   comms_config ................. <deepspeed.comm.config.DeepSpeedCommsConfig object at 0x7fe3e56bb5e0>
[2023-10-31 22:48:21,618] [INFO] [config.py:972:print]   communication_data_type ...... None
[2023-10-31 22:48:21,619] [INFO] [config.py:972:print]   compression_config ........... {'weight_quantization': {'shared_parameters': {'enabled': False, 'quantizer_kernel': False, 'schedule_offset': 0, 'quantize_groups': 1, 'quantize_verbose': False, 'quantization_type': 'symmetric', 'quantize_weight_in_forward': False, 'rounding': 'nearest', 'fp16_mixed_quantize': False, 'quantize_change_ratio': 0.001}, 'different_groups': {}}, 'activation_quantization': {'shared_parameters': {'enabled': False, 'quantization_type': 'symmetric', 'range_calibration': 'dynamic', 'schedule_offset': 1000}, 'different_groups': {}}, 'sparse_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'row_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'head_pruning': {'shared_parameters': {'enabled': False, 'method': 'topk', 'schedule_offset': 1000}, 'different_groups': {}}, 'channel_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'layer_reduction': {'enabled': False}}
[2023-10-31 22:48:21,620] [INFO] [config.py:972:print]   curriculum_enabled_legacy .... False
[2023-10-31 22:48:21,620] [INFO] [config.py:972:print]   curriculum_params_legacy ..... False
[2023-10-31 22:48:21,621] [INFO] [config.py:972:print]   data_efficiency_config ....... {'enabled': False, 'seed': 1234, 'data_sampling': {'enabled': False, 'num_epochs': 1000, 'num_workers': 0, 'curriculum_learning': {'enabled': False}}, 'data_routing': {'enabled': False, 'random_ltd': {'enabled': False, 'layer_token_lr_schedule': {'enabled': False}}}}
[2023-10-31 22:48:21,622] [INFO] [config.py:972:print]   data_efficiency_enabled ...... False
[2023-10-31 22:48:21,622] [INFO] [config.py:972:print]   dataloader_drop_last ......... False
[2023-10-31 22:48:21,623] [INFO] [config.py:972:print]   disable_allgather ............ False
[2023-10-31 22:48:21,624] [INFO] [config.py:972:print]   dump_state ................... False
[2023-10-31 22:48:21,625] [INFO] [config.py:972:print]   dynamic_loss_scale_args ...... None
[2023-10-31 22:48:21,625] [INFO] [config.py:972:print]   eigenvalue_enabled ........... False
[2023-10-31 22:48:21,626] [INFO] [config.py:972:print]   eigenvalue_gas_boundary_resolution  1
[2023-10-31 22:48:21,627] [INFO] [config.py:972:print]   eigenvalue_layer_name ........ bert.encoder.layer
[2023-10-31 22:48:21,628] [INFO] [config.py:972:print]   eigenvalue_layer_num ......... 0
[2023-10-31 22:48:21,629] [INFO] [config.py:972:print]   eigenvalue_max_iter .......... 100
[2023-10-31 22:48:21,629] [INFO] [config.py:972:print]   eigenvalue_stability ......... 1e-06
[2023-10-31 22:48:21,630] [INFO] [config.py:972:print]   eigenvalue_tol ............... 0.01
[2023-10-31 22:48:21,631] [INFO] [config.py:972:print]   eigenvalue_verbose ........... False
[2023-10-31 22:48:21,631] [INFO] [config.py:972:print]   elasticity_enabled ........... False
[2023-10-31 22:48:21,632] [INFO] [config.py:972:print]   flops_profiler_config ........ {
    "enabled": false, 
    "recompute_fwd_factor": 0.0, 
    "profile_step": 1, 
    "module_depth": -1, 
    "top_modules": 1, 
    "detailed": true, 
    "output_file": null
}
[2023-10-31 22:48:21,633] [INFO] [config.py:972:print]   fp16_auto_cast ............... None
[2023-10-31 22:48:21,634] [INFO] [config.py:972:print]   fp16_enabled ................. False
[2023-10-31 22:48:21,634] [INFO] [config.py:972:print]   fp16_master_weights_and_gradients  False
[2023-10-31 22:48:21,635] [INFO] [config.py:972:print]   global_rank .................. 0
[2023-10-31 22:48:21,635] [INFO] [config.py:972:print]   grad_accum_dtype ............. None
[2023-10-31 22:48:21,636] [INFO] [config.py:972:print]   gradient_accumulation_steps .. 1
[2023-10-31 22:48:21,636] [INFO] [config.py:972:print]   gradient_clipping ............ 0.0
[2023-10-31 22:48:21,637] [INFO] [config.py:972:print]   gradient_predivide_factor .... 1.0
[2023-10-31 22:48:21,637] [INFO] [config.py:972:print]   hybrid_engine ................ enabled=False max_out_tokens=512 inference_tp_size=1 release_inference_cache=False pin_parameters=True tp_gather_partition_size=8
[2023-10-31 22:48:21,638] [INFO] [config.py:972:print]   initial_dynamic_scale ........ 65536
[2023-10-31 22:48:21,638] [INFO] [config.py:972:print]   load_universal_checkpoint .... False
[2023-10-31 22:48:21,639] [INFO] [config.py:972:print]   loss_scale ................... 0
[2023-10-31 22:48:21,640] [INFO] [config.py:972:print]   memory_breakdown ............. False
[2023-10-31 22:48:21,641] [INFO] [config.py:972:print]   mics_hierarchial_params_gather  False
[2023-10-31 22:48:21,641] [INFO] [config.py:972:print]   mics_shard_size .............. -1
[2023-10-31 22:48:21,642] [INFO] [config.py:972:print]   monitor_config ............... tensorboard=TensorBoardConfig(enabled=False, output_path='', job_name='DeepSpeedJobName') wandb=WandbConfig(enabled=False, group=None, team=None, project='deepspeed') csv_monitor=CSVConfig(enabled=False, output_path='', job_name='DeepSpeedJobName') enabled=False
[2023-10-31 22:48:21,643] [INFO] [config.py:972:print]   nebula_config ................ {
    "enabled": false, 
    "persistent_storage_path": null, 
    "persistent_time_interval": 100, 
    "num_of_version_in_retention": 2, 
    "enable_nebula_load": true, 
    "load_path": null
}
[2023-10-31 22:48:21,643] [INFO] [config.py:972:print]   optimizer_legacy_fusion ...... False
[2023-10-31 22:48:21,644] [INFO] [config.py:972:print]   optimizer_name ............... None
[2023-10-31 22:48:21,645] [INFO] [config.py:972:print]   optimizer_params ............. None
[2023-10-31 22:48:21,645] [INFO] [config.py:972:print]   pipeline ..................... {'stages': 'auto', 'partition': 'best', 'seed_layers': False, 'activation_checkpoint_interval': 0}
[2023-10-31 22:48:21,646] [INFO] [config.py:972:print]   pld_enabled .................. False
[2023-10-31 22:48:21,647] [INFO] [config.py:972:print]   pld_params ................... False
[2023-10-31 22:48:21,648] [INFO] [config.py:972:print]   prescale_gradients ........... False
[2023-10-31 22:48:21,649] [INFO] [config.py:972:print]   scheduler_name ............... None
[2023-10-31 22:48:21,649] [INFO] [config.py:972:print]   scheduler_params ............. None
[2023-10-31 22:48:21,650] [INFO] [config.py:972:print]   sparse_attention ............. None
[2023-10-31 22:48:21,651] [INFO] [config.py:972:print]   sparse_gradients_enabled ..... False
[2023-10-31 22:48:21,651] [INFO] [config.py:972:print]   steps_per_print .............. 2000
[2023-10-31 22:48:21,652] [INFO] [config.py:972:print]   train_batch_size ............. 2
[2023-10-31 22:48:21,653] [INFO] [config.py:972:print]   train_micro_batch_size_per_gpu  1
[2023-10-31 22:48:21,653] [INFO] [config.py:972:print]   use_node_local_storage ....... False
[2023-10-31 22:48:21,654] [INFO] [config.py:972:print]   wall_clock_breakdown ......... False
[2023-10-31 22:48:21,655] [INFO] [config.py:972:print]   weight_quantization_config ... None
[2023-10-31 22:48:21,655] [INFO] [config.py:972:print]   world_size ................... 2
[2023-10-31 22:48:21,656] [INFO] [config.py:972:print]   zero_allow_untested_optimizer  False
[2023-10-31 22:48:21,657] [INFO] [config.py:972:print]   zero_config .................. stage=3 contiguous_gradients=True reduce_scatter=True reduce_bucket_size=4194304 allgather_partitions=True allgather_bucket_size=500,000,000 overlap_comm=True load_from_fp32_weights=True elastic_checkpoint=False offload_param=None offload_optimizer=None sub_group_size=1,000,000,000 cpu_offload_param=None cpu_offload_use_pin_memory=None cpu_offload=None prefetch_bucket_size=3774873 param_persistence_threshold=20480 model_persistence_threshold=sys.maxsize max_live_parameters=1,000,000,000 max_reuse_distance=1,000,000,000 gather_16bit_weights_on_model_save=False stage3_gather_fp16_weights_on_model_save=False ignore_unused_parameters=True legacy_stage1=False round_robin_gradients=False zero_hpz_partition_size=1 zero_quantized_weights=False zero_quantized_nontrainable_weights=False zero_quantized_gradients=False mics_shard_size=-1 mics_hierarchical_params_gather=False memory_efficient_linear=True pipeline_loading_checkpoint=False override_module_apply=True
[2023-10-31 22:48:21,658] [INFO] [config.py:972:print]   zero_enabled ................. True
[2023-10-31 22:48:21,658] [INFO] [config.py:972:print]   zero_force_ds_cpu_optimizer .. True
[2023-10-31 22:48:21,659] [INFO] [config.py:972:print]   zero_optimization_stage ...... 3
[2023-10-31 22:48:21,660] [INFO] [config.py:958:print_user_config]   json = {
    "fp16": {
        "enabled": false
    }, 
    "bf16": {
        "enabled": false
    }, 
    "zero_optimization": {
        "stage": 3, 
        "overlap_comm": true, 
        "contiguous_gradients": true, 
        "reduce_bucket_size": 4.194304e+06, 
        "stage3_prefetch_bucket_size": 3.774874e+06, 
        "stage3_param_persistence_threshold": 2.048000e+04
    }, 
    "steps_per_print": 2.000000e+03, 
    "train_batch_size": 2, 
    "train_micro_batch_size_per_gpu": 1, 
    "wall_clock_breakdown": false
}
module.shared.weight cuda:0
module.shared.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.0.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.0.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.0.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.0.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight cuda:0
module.encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.0.layer_norm.weight cuda:0
module.encoder.block.0.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.0.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.0.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.0.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.0.layer.1.layer_norm.weight cuda:0
module.encoder.block.0.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.1.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.1.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.1.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.1.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.0.layer_norm.weight cuda:0
module.encoder.block.1.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.1.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.1.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.1.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.1.layer.1.layer_norm.weight cuda:0
module.encoder.block.1.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.2.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.2.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.2.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.2.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.0.layer_norm.weight cuda:0
module.encoder.block.2.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.2.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.2.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.2.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.2.layer.1.layer_norm.weight cuda:0
module.encoder.block.2.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.3.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.3.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.3.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.3.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.0.layer_norm.weight cuda:0
module.encoder.block.3.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.3.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.3.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.3.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.3.layer.1.layer_norm.weight cuda:0
module.encoder.block.3.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.4.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.4.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.4.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.4.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.0.layer_norm.weight cuda:0
module.encoder.block.4.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.4.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.4.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.4.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.4.layer.1.layer_norm.weight cuda:0
module.encoder.block.4.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.5.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.5.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.5.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.5.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.0.layer_norm.weight cuda:0
module.encoder.block.5.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.5.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.5.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.5.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.5.layer.1.layer_norm.weight cuda:0
module.encoder.block.5.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.6.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.6.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.6.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.6.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.0.layer_norm.weight cuda:0
module.encoder.block.6.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.6.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.6.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.6.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.6.layer.1.layer_norm.weight cuda:0
module.encoder.block.6.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.7.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.7.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.7.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.7.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.0.layer_norm.weight cuda:0
module.encoder.block.7.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.7.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.7.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.7.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.7.layer.1.layer_norm.weight cuda:0
module.encoder.block.7.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.8.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.8.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.8.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.8.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.0.layer_norm.weight cuda:0
module.encoder.block.8.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.8.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.8.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.8.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.8.layer.1.layer_norm.weight cuda:0
module.encoder.block.8.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.9.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.9.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.9.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.9.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.0.layer_norm.weight cuda:0
module.encoder.block.9.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.9.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.9.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.9.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.9.layer.1.layer_norm.weight cuda:0
module.encoder.block.9.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.10.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.10.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.10.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.10.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.0.layer_norm.weight cuda:0
module.encoder.block.10.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.10.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.10.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.10.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.10.layer.1.layer_norm.weight cuda:0
module.encoder.block.10.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.11.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.11.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.11.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.11.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.0.layer_norm.weight cuda:0
module.encoder.block.11.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.11.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.11.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.11.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.11.layer.1.layer_norm.weight cuda:0
module.encoder.block.11.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.12.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.12.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.12.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.12.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.0.layer_norm.weight cuda:0
module.encoder.block.12.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.12.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.12.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.12.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.12.layer.1.layer_norm.weight cuda:0
module.encoder.block.12.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.13.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.13.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.13.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.13.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.0.layer_norm.weight cuda:0
module.encoder.block.13.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.13.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.13.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.13.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.13.layer.1.layer_norm.weight cuda:0
module.encoder.block.13.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.14.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.14.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.14.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.14.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.0.layer_norm.weight cuda:0
module.encoder.block.14.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.14.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.14.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.14.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.14.layer.1.layer_norm.weight cuda:0
module.encoder.block.14.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.15.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.15.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.15.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.15.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.0.layer_norm.weight cuda:0
module.encoder.block.15.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.15.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.15.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.15.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.15.layer.1.layer_norm.weight cuda:0
module.encoder.block.15.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.16.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.16.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.16.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.16.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.0.layer_norm.weight cuda:0
module.encoder.block.16.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.16.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.16.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.16.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.16.layer.1.layer_norm.weight cuda:0
module.encoder.block.16.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.17.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.17.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.17.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.17.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.0.layer_norm.weight cuda:0
module.encoder.block.17.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.17.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.17.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.17.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.17.layer.1.layer_norm.weight cuda:0
module.encoder.block.17.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.18.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.18.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.18.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.18.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.0.layer_norm.weight cuda:0
module.encoder.block.18.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.18.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.18.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.18.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.18.layer.1.layer_norm.weight cuda:0
module.encoder.block.18.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.19.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.19.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.19.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.19.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.0.layer_norm.weight cuda:0
module.encoder.block.19.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.19.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.19.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.19.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.19.layer.1.layer_norm.weight cuda:0
module.encoder.block.19.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.20.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.20.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.20.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.20.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.0.layer_norm.weight cuda:0
module.encoder.block.20.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.20.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.20.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.20.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.20.layer.1.layer_norm.weight cuda:0
module.encoder.block.20.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.21.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.21.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.21.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.21.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.0.layer_norm.weight cuda:0
module.encoder.block.21.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.21.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.21.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.21.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.21.layer.1.layer_norm.weight cuda:0
module.encoder.block.21.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.22.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.22.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.22.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.22.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.0.layer_norm.weight cuda:0
module.encoder.block.22.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.22.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.22.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.22.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.22.layer.1.layer_norm.weight cuda:0
module.encoder.block.22.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.0.SelfAttention.q.weight cuda:0
module.encoder.block.23.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.0.SelfAttention.k.weight cuda:0
module.encoder.block.23.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.0.SelfAttention.v.weight cuda:0
module.encoder.block.23.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.0.SelfAttention.o.weight cuda:0
module.encoder.block.23.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.0.layer_norm.weight cuda:0
module.encoder.block.23.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.1.DenseReluDense.wi_0.weight cuda:0
module.encoder.block.23.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.1.DenseReluDense.wi_1.weight cuda:0
module.encoder.block.23.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.1.DenseReluDense.wo.weight cuda:0
module.encoder.block.23.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.block.23.layer.1.layer_norm.weight cuda:0
module.encoder.block.23.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.encoder.final_layer_norm.weight cuda:0
module.encoder.final_layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.0.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.0.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.0.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.0.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight cuda:0
module.decoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.0.layer_norm.weight cuda:0
module.decoder.block.0.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.0.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.0.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.0.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.0.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.1.layer_norm.weight cuda:0
module.decoder.block.0.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.0.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.0.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.0.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.0.layer.2.layer_norm.weight cuda:0
module.decoder.block.0.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.1.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.1.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.1.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.1.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.0.layer_norm.weight cuda:0
module.decoder.block.1.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.1.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.1.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.1.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.1.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.1.layer_norm.weight cuda:0
module.decoder.block.1.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.1.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.1.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.1.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.1.layer.2.layer_norm.weight cuda:0
module.decoder.block.1.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.2.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.2.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.2.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.2.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.0.layer_norm.weight cuda:0
module.decoder.block.2.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.2.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.2.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.2.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.2.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.1.layer_norm.weight cuda:0
module.decoder.block.2.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.2.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.2.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.2.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.2.layer.2.layer_norm.weight cuda:0
module.decoder.block.2.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.3.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.3.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.3.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.3.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.0.layer_norm.weight cuda:0
module.decoder.block.3.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.3.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.3.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.3.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.3.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.1.layer_norm.weight cuda:0
module.decoder.block.3.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.3.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.3.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.3.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.3.layer.2.layer_norm.weight cuda:0
module.decoder.block.3.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.4.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.4.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.4.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.4.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.0.layer_norm.weight cuda:0
module.decoder.block.4.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.4.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.4.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.4.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.4.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.1.layer_norm.weight cuda:0
module.decoder.block.4.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.4.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.4.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.4.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.4.layer.2.layer_norm.weight cuda:0
module.decoder.block.4.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.5.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.5.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.5.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.5.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.0.layer_norm.weight cuda:0
module.decoder.block.5.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.5.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.5.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.5.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.5.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.1.layer_norm.weight cuda:0
module.decoder.block.5.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.5.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.5.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.5.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.5.layer.2.layer_norm.weight cuda:0
module.decoder.block.5.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.6.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.6.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.6.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.6.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.0.layer_norm.weight cuda:0
module.decoder.block.6.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.6.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.6.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.6.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.6.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.1.layer_norm.weight cuda:0
module.decoder.block.6.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.6.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.6.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.6.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.6.layer.2.layer_norm.weight cuda:0
module.decoder.block.6.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.7.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.7.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.7.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.7.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.0.layer_norm.weight cuda:0
module.decoder.block.7.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.7.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.7.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.7.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.7.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.1.layer_norm.weight cuda:0
module.decoder.block.7.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.7.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.7.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.7.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.7.layer.2.layer_norm.weight cuda:0
module.decoder.block.7.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.8.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.8.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.8.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.8.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.0.layer_norm.weight cuda:0
module.decoder.block.8.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.8.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.8.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.8.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.8.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.1.layer_norm.weight cuda:0
module.decoder.block.8.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.8.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.8.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.8.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.8.layer.2.layer_norm.weight cuda:0
module.decoder.block.8.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.9.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.9.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.9.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.9.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.0.layer_norm.weight cuda:0
module.decoder.block.9.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.9.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.9.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.9.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.9.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.1.layer_norm.weight cuda:0
module.decoder.block.9.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.9.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.9.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.9.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.9.layer.2.layer_norm.weight cuda:0
module.decoder.block.9.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.10.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.10.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.10.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.10.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.0.layer_norm.weight cuda:0
module.decoder.block.10.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.10.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.10.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.10.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.10.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.1.layer_norm.weight cuda:0
module.decoder.block.10.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.10.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.10.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.10.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.10.layer.2.layer_norm.weight cuda:0
module.decoder.block.10.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.11.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.11.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.11.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.11.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.0.layer_norm.weight cuda:0
module.decoder.block.11.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.11.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.11.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.11.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.11.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.1.layer_norm.weight cuda:0
module.decoder.block.11.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.11.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.11.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.11.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.11.layer.2.layer_norm.weight cuda:0
module.decoder.block.11.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.12.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.12.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.12.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.12.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.0.layer_norm.weight cuda:0
module.decoder.block.12.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.12.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.12.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.12.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.12.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.1.layer_norm.weight cuda:0
module.decoder.block.12.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.12.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.12.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.12.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.12.layer.2.layer_norm.weight cuda:0
module.decoder.block.12.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.13.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.13.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.13.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.13.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.0.layer_norm.weight cuda:0
module.decoder.block.13.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.13.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.13.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.13.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.13.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.1.layer_norm.weight cuda:0
module.decoder.block.13.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.13.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.13.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.13.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.13.layer.2.layer_norm.weight cuda:0
module.decoder.block.13.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.14.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.14.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.14.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.14.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.0.layer_norm.weight cuda:0
module.decoder.block.14.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.14.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.14.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.14.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.14.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.1.layer_norm.weight cuda:0
module.decoder.block.14.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.14.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.14.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.14.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.14.layer.2.layer_norm.weight cuda:0
module.decoder.block.14.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.15.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.15.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.15.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.15.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.0.layer_norm.weight cuda:0
module.decoder.block.15.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.15.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.15.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.15.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.15.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.1.layer_norm.weight cuda:0
module.decoder.block.15.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.15.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.15.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.15.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.15.layer.2.layer_norm.weight cuda:0
module.decoder.block.15.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.16.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.16.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.16.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.16.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.0.layer_norm.weight cuda:0
module.decoder.block.16.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.16.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.16.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.16.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.16.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.1.layer_norm.weight cuda:0
module.decoder.block.16.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.16.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.16.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.16.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.16.layer.2.layer_norm.weight cuda:0
module.decoder.block.16.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.17.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.17.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.17.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.17.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.0.layer_norm.weight cuda:0
module.decoder.block.17.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.17.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.17.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.17.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.17.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.1.layer_norm.weight cuda:0
module.decoder.block.17.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.17.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.17.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.17.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.17.layer.2.layer_norm.weight cuda:0
module.decoder.block.17.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.18.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.18.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.18.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.18.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.0.layer_norm.weight cuda:0
module.decoder.block.18.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.18.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.18.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.18.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.18.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.1.layer_norm.weight cuda:0
module.decoder.block.18.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.18.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.18.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.18.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.18.layer.2.layer_norm.weight cuda:0
module.decoder.block.18.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.19.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.19.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.19.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.19.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.0.layer_norm.weight cuda:0
module.decoder.block.19.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.19.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.19.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.19.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.19.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.1.layer_norm.weight cuda:0
module.decoder.block.19.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.19.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.19.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.19.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.19.layer.2.layer_norm.weight cuda:0
module.decoder.block.19.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.20.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.20.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.20.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.20.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.0.layer_norm.weight cuda:0
module.decoder.block.20.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.20.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.20.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.20.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.20.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.1.layer_norm.weight cuda:0
module.decoder.block.20.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.20.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.20.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.20.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.20.layer.2.layer_norm.weight cuda:0
module.decoder.block.20.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.21.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.21.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.21.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.21.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.0.layer_norm.weight cuda:0
module.decoder.block.21.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.21.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.21.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.21.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.21.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.1.layer_norm.weight cuda:0
module.decoder.block.21.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.21.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.21.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.21.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.21.layer.2.layer_norm.weight cuda:0
module.decoder.block.21.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.22.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.22.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.22.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.22.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.0.layer_norm.weight cuda:0
module.decoder.block.22.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.22.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.22.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.22.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.22.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.1.layer_norm.weight cuda:0
module.decoder.block.22.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.22.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.22.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.22.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.22.layer.2.layer_norm.weight cuda:0
module.decoder.block.22.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.0.SelfAttention.q.weight cuda:0
module.decoder.block.23.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.0.SelfAttention.k.weight cuda:0
module.decoder.block.23.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.0.SelfAttention.v.weight cuda:0
module.decoder.block.23.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.0.SelfAttention.o.weight cuda:0
module.decoder.block.23.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.0.layer_norm.weight cuda:0
module.decoder.block.23.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.1.EncDecAttention.q.weight cuda:0
module.decoder.block.23.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.1.EncDecAttention.k.weight cuda:0
module.decoder.block.23.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.1.EncDecAttention.v.weight cuda:0
module.decoder.block.23.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.1.EncDecAttention.o.weight cuda:0
module.decoder.block.23.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.1.layer_norm.weight cuda:0
module.decoder.block.23.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.2.DenseReluDense.wi_0.weight cuda:0
module.decoder.block.23.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.2.DenseReluDense.wi_1.weight cuda:0
module.decoder.block.23.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.2.DenseReluDense.wo.weight cuda:0
module.decoder.block.23.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.block.23.layer.2.layer_norm.weight cuda:0
module.decoder.block.23.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.decoder.final_layer_norm.weight cuda:0
module.decoder.final_layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
module.lm_head.weight cuda:0
module.lm_head.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
shared.weight cuda:0
shared.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.q.weight cuda:0
encoder.block.0.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.k.weight cuda:0
encoder.block.0.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.v.weight cuda:0
encoder.block.0.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.o.weight cuda:0
encoder.block.0.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight cuda:0
encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.0.layer_norm.weight cuda:0
encoder.block.0.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.0.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.0.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.0.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.0.layer.1.layer_norm.weight cuda:0
encoder.block.0.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.0.SelfAttention.q.weight cuda:0
encoder.block.1.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.0.SelfAttention.k.weight cuda:0
encoder.block.1.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.0.SelfAttention.v.weight cuda:0
encoder.block.1.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.0.SelfAttention.o.weight cuda:0
encoder.block.1.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.0.layer_norm.weight cuda:0
encoder.block.1.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.1.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.1.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.1.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.1.layer.1.layer_norm.weight cuda:0
encoder.block.1.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.0.SelfAttention.q.weight cuda:0
encoder.block.2.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.0.SelfAttention.k.weight cuda:0
encoder.block.2.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.0.SelfAttention.v.weight cuda:0
encoder.block.2.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.0.SelfAttention.o.weight cuda:0
encoder.block.2.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.0.layer_norm.weight cuda:0
encoder.block.2.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.2.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.2.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.2.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.2.layer.1.layer_norm.weight cuda:0
encoder.block.2.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.0.SelfAttention.q.weight cuda:0
encoder.block.3.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.0.SelfAttention.k.weight cuda:0
encoder.block.3.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.0.SelfAttention.v.weight cuda:0
encoder.block.3.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.0.SelfAttention.o.weight cuda:0
encoder.block.3.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.0.layer_norm.weight cuda:0
encoder.block.3.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.3.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.3.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.3.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.3.layer.1.layer_norm.weight cuda:0
encoder.block.3.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.0.SelfAttention.q.weight cuda:0
encoder.block.4.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.0.SelfAttention.k.weight cuda:0
encoder.block.4.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.0.SelfAttention.v.weight cuda:0
encoder.block.4.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.0.SelfAttention.o.weight cuda:0
encoder.block.4.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.0.layer_norm.weight cuda:0
encoder.block.4.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.4.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.4.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.4.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.4.layer.1.layer_norm.weight cuda:0
encoder.block.4.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.0.SelfAttention.q.weight cuda:0
encoder.block.5.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.0.SelfAttention.k.weight cuda:0
encoder.block.5.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.0.SelfAttention.v.weight cuda:0
encoder.block.5.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.0.SelfAttention.o.weight cuda:0
encoder.block.5.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.0.layer_norm.weight cuda:0
encoder.block.5.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.5.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.5.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.5.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.5.layer.1.layer_norm.weight cuda:0
encoder.block.5.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.0.SelfAttention.q.weight cuda:0
encoder.block.6.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.0.SelfAttention.k.weight cuda:0
encoder.block.6.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.0.SelfAttention.v.weight cuda:0
encoder.block.6.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.0.SelfAttention.o.weight cuda:0
encoder.block.6.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.0.layer_norm.weight cuda:0
encoder.block.6.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.6.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.6.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.6.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.6.layer.1.layer_norm.weight cuda:0
encoder.block.6.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.0.SelfAttention.q.weight cuda:0
encoder.block.7.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.0.SelfAttention.k.weight cuda:0
encoder.block.7.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.0.SelfAttention.v.weight cuda:0
encoder.block.7.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.0.SelfAttention.o.weight cuda:0
encoder.block.7.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.0.layer_norm.weight cuda:0
encoder.block.7.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.7.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.7.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.7.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.7.layer.1.layer_norm.weight cuda:0
encoder.block.7.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.0.SelfAttention.q.weight cuda:0
encoder.block.8.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.0.SelfAttention.k.weight cuda:0
encoder.block.8.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.0.SelfAttention.v.weight cuda:0
encoder.block.8.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.0.SelfAttention.o.weight cuda:0
encoder.block.8.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.0.layer_norm.weight cuda:0
encoder.block.8.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.8.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.8.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.8.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.8.layer.1.layer_norm.weight cuda:0
encoder.block.8.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.0.SelfAttention.q.weight cuda:0
encoder.block.9.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.0.SelfAttention.k.weight cuda:0
encoder.block.9.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.0.SelfAttention.v.weight cuda:0
encoder.block.9.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.0.SelfAttention.o.weight cuda:0
encoder.block.9.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.0.layer_norm.weight cuda:0
encoder.block.9.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.9.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.9.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.9.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.9.layer.1.layer_norm.weight cuda:0
encoder.block.9.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.0.SelfAttention.q.weight cuda:0
encoder.block.10.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.0.SelfAttention.k.weight cuda:0
encoder.block.10.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.0.SelfAttention.v.weight cuda:0
encoder.block.10.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.0.SelfAttention.o.weight cuda:0
encoder.block.10.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.0.layer_norm.weight cuda:0
encoder.block.10.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.10.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.10.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.10.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.10.layer.1.layer_norm.weight cuda:0
encoder.block.10.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.0.SelfAttention.q.weight cuda:0
encoder.block.11.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.0.SelfAttention.k.weight cuda:0
encoder.block.11.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.0.SelfAttention.v.weight cuda:0
encoder.block.11.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.0.SelfAttention.o.weight cuda:0
encoder.block.11.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.0.layer_norm.weight cuda:0
encoder.block.11.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.11.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.11.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.11.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.11.layer.1.layer_norm.weight cuda:0
encoder.block.11.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.0.SelfAttention.q.weight cuda:0
encoder.block.12.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.0.SelfAttention.k.weight cuda:0
encoder.block.12.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.0.SelfAttention.v.weight cuda:0
encoder.block.12.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.0.SelfAttention.o.weight cuda:0
encoder.block.12.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.0.layer_norm.weight cuda:0
encoder.block.12.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.12.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.12.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.12.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.12.layer.1.layer_norm.weight cuda:0
encoder.block.12.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.0.SelfAttention.q.weight cuda:0
encoder.block.13.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.0.SelfAttention.k.weight cuda:0
encoder.block.13.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.0.SelfAttention.v.weight cuda:0
encoder.block.13.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.0.SelfAttention.o.weight cuda:0
encoder.block.13.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.0.layer_norm.weight cuda:0
encoder.block.13.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.13.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.13.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.13.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.13.layer.1.layer_norm.weight cuda:0
encoder.block.13.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.0.SelfAttention.q.weight cuda:0
encoder.block.14.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.0.SelfAttention.k.weight cuda:0
encoder.block.14.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.0.SelfAttention.v.weight cuda:0
encoder.block.14.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.0.SelfAttention.o.weight cuda:0
encoder.block.14.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.0.layer_norm.weight cuda:0
encoder.block.14.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.14.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.14.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.14.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.14.layer.1.layer_norm.weight cuda:0
encoder.block.14.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.0.SelfAttention.q.weight cuda:0
encoder.block.15.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.0.SelfAttention.k.weight cuda:0
encoder.block.15.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.0.SelfAttention.v.weight cuda:0
encoder.block.15.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.0.SelfAttention.o.weight cuda:0
encoder.block.15.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.0.layer_norm.weight cuda:0
encoder.block.15.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.15.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.15.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.15.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.15.layer.1.layer_norm.weight cuda:0
encoder.block.15.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.0.SelfAttention.q.weight cuda:0
encoder.block.16.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.0.SelfAttention.k.weight cuda:0
encoder.block.16.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.0.SelfAttention.v.weight cuda:0
encoder.block.16.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.0.SelfAttention.o.weight cuda:0
encoder.block.16.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.0.layer_norm.weight cuda:0
encoder.block.16.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.16.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.16.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.16.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.16.layer.1.layer_norm.weight cuda:0
encoder.block.16.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.0.SelfAttention.q.weight cuda:0
encoder.block.17.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.0.SelfAttention.k.weight cuda:0
encoder.block.17.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.0.SelfAttention.v.weight cuda:0
encoder.block.17.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.0.SelfAttention.o.weight cuda:0
encoder.block.17.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.0.layer_norm.weight cuda:0
encoder.block.17.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.17.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.17.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.17.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.17.layer.1.layer_norm.weight cuda:0
encoder.block.17.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.0.SelfAttention.q.weight cuda:0
encoder.block.18.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.0.SelfAttention.k.weight cuda:0
encoder.block.18.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.0.SelfAttention.v.weight cuda:0
encoder.block.18.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.0.SelfAttention.o.weight cuda:0
encoder.block.18.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.0.layer_norm.weight cuda:0
encoder.block.18.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.18.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.18.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.18.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.18.layer.1.layer_norm.weight cuda:0
encoder.block.18.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.0.SelfAttention.q.weight cuda:0
encoder.block.19.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.0.SelfAttention.k.weight cuda:0
encoder.block.19.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.0.SelfAttention.v.weight cuda:0
encoder.block.19.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.0.SelfAttention.o.weight cuda:0
encoder.block.19.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.0.layer_norm.weight cuda:0
encoder.block.19.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.19.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.19.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.19.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.19.layer.1.layer_norm.weight cuda:0
encoder.block.19.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.0.SelfAttention.q.weight cuda:0
encoder.block.20.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.0.SelfAttention.k.weight cuda:0
encoder.block.20.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.0.SelfAttention.v.weight cuda:0
encoder.block.20.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.0.SelfAttention.o.weight cuda:0
encoder.block.20.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.0.layer_norm.weight cuda:0
encoder.block.20.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.20.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.20.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.20.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.20.layer.1.layer_norm.weight cuda:0
encoder.block.20.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.0.SelfAttention.q.weight cuda:0
encoder.block.21.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.0.SelfAttention.k.weight cuda:0
encoder.block.21.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.0.SelfAttention.v.weight cuda:0
encoder.block.21.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.0.SelfAttention.o.weight cuda:0
encoder.block.21.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.0.layer_norm.weight cuda:0
encoder.block.21.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.21.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.21.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.21.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.21.layer.1.layer_norm.weight cuda:0
encoder.block.21.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.0.SelfAttention.q.weight cuda:0
encoder.block.22.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.0.SelfAttention.k.weight cuda:0
encoder.block.22.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.0.SelfAttention.v.weight cuda:0
encoder.block.22.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.0.SelfAttention.o.weight cuda:0
encoder.block.22.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.0.layer_norm.weight cuda:0
encoder.block.22.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.22.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.22.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.22.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.22.layer.1.layer_norm.weight cuda:0
encoder.block.22.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.0.SelfAttention.q.weight cuda:0
encoder.block.23.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.0.SelfAttention.k.weight cuda:0
encoder.block.23.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.0.SelfAttention.v.weight cuda:0
encoder.block.23.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.0.SelfAttention.o.weight cuda:0
encoder.block.23.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.0.layer_norm.weight cuda:0
encoder.block.23.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.1.DenseReluDense.wi_0.weight cuda:0
encoder.block.23.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.1.DenseReluDense.wi_1.weight cuda:0
encoder.block.23.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.1.DenseReluDense.wo.weight cuda:0
encoder.block.23.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.block.23.layer.1.layer_norm.weight cuda:0
encoder.block.23.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
encoder.final_layer_norm.weight cuda:0
encoder.final_layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.q.weight cuda:0
decoder.block.0.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.k.weight cuda:0
decoder.block.0.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.v.weight cuda:0
decoder.block.0.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.o.weight cuda:0
decoder.block.0.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight cuda:0
decoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.0.layer_norm.weight cuda:0
decoder.block.0.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.0.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.0.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.0.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.0.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.1.layer_norm.weight cuda:0
decoder.block.0.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.0.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.0.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.0.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.0.layer.2.layer_norm.weight cuda:0
decoder.block.0.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.0.SelfAttention.q.weight cuda:0
decoder.block.1.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.0.SelfAttention.k.weight cuda:0
decoder.block.1.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.0.SelfAttention.v.weight cuda:0
decoder.block.1.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.0.SelfAttention.o.weight cuda:0
decoder.block.1.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.0.layer_norm.weight cuda:0
decoder.block.1.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.1.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.1.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.1.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.1.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.1.layer_norm.weight cuda:0
decoder.block.1.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.1.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.1.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.1.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.1.layer.2.layer_norm.weight cuda:0
decoder.block.1.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.0.SelfAttention.q.weight cuda:0
decoder.block.2.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.0.SelfAttention.k.weight cuda:0
decoder.block.2.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.0.SelfAttention.v.weight cuda:0
decoder.block.2.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.0.SelfAttention.o.weight cuda:0
decoder.block.2.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.0.layer_norm.weight cuda:0
decoder.block.2.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.2.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.2.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.2.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.2.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.1.layer_norm.weight cuda:0
decoder.block.2.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.2.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.2.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.2.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.2.layer.2.layer_norm.weight cuda:0
decoder.block.2.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.0.SelfAttention.q.weight cuda:0
decoder.block.3.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.0.SelfAttention.k.weight cuda:0
decoder.block.3.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.0.SelfAttention.v.weight cuda:0
decoder.block.3.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.0.SelfAttention.o.weight cuda:0
decoder.block.3.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.0.layer_norm.weight cuda:0
decoder.block.3.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.3.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.3.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.3.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.3.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.1.layer_norm.weight cuda:0
decoder.block.3.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.3.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.3.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.3.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.3.layer.2.layer_norm.weight cuda:0
decoder.block.3.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.0.SelfAttention.q.weight cuda:0
decoder.block.4.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.0.SelfAttention.k.weight cuda:0
decoder.block.4.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.0.SelfAttention.v.weight cuda:0
decoder.block.4.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.0.SelfAttention.o.weight cuda:0
decoder.block.4.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.0.layer_norm.weight cuda:0
decoder.block.4.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.4.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.4.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.4.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.4.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.1.layer_norm.weight cuda:0
decoder.block.4.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.4.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.4.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.4.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.4.layer.2.layer_norm.weight cuda:0
decoder.block.4.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.0.SelfAttention.q.weight cuda:0
decoder.block.5.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.0.SelfAttention.k.weight cuda:0
decoder.block.5.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.0.SelfAttention.v.weight cuda:0
decoder.block.5.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.0.SelfAttention.o.weight cuda:0
decoder.block.5.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.0.layer_norm.weight cuda:0
decoder.block.5.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.5.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.5.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.5.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.5.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.1.layer_norm.weight cuda:0
decoder.block.5.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.5.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.5.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.5.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.5.layer.2.layer_norm.weight cuda:0
decoder.block.5.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.0.SelfAttention.q.weight cuda:0
decoder.block.6.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.0.SelfAttention.k.weight cuda:0
decoder.block.6.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.0.SelfAttention.v.weight cuda:0
decoder.block.6.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.0.SelfAttention.o.weight cuda:0
decoder.block.6.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.0.layer_norm.weight cuda:0
decoder.block.6.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.6.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.6.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.6.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.6.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.1.layer_norm.weight cuda:0
decoder.block.6.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.6.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.6.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.6.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.6.layer.2.layer_norm.weight cuda:0
decoder.block.6.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.0.SelfAttention.q.weight cuda:0
decoder.block.7.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.0.SelfAttention.k.weight cuda:0
decoder.block.7.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.0.SelfAttention.v.weight cuda:0
decoder.block.7.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.0.SelfAttention.o.weight cuda:0
decoder.block.7.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.0.layer_norm.weight cuda:0
decoder.block.7.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.7.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.7.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.7.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.7.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.1.layer_norm.weight cuda:0
decoder.block.7.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.7.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.7.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.7.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.7.layer.2.layer_norm.weight cuda:0
decoder.block.7.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.0.SelfAttention.q.weight cuda:0
decoder.block.8.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.0.SelfAttention.k.weight cuda:0
decoder.block.8.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.0.SelfAttention.v.weight cuda:0
decoder.block.8.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.0.SelfAttention.o.weight cuda:0
decoder.block.8.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.0.layer_norm.weight cuda:0
decoder.block.8.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.8.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.8.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.8.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.8.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.1.layer_norm.weight cuda:0
decoder.block.8.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.8.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.8.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.8.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.8.layer.2.layer_norm.weight cuda:0
decoder.block.8.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.0.SelfAttention.q.weight cuda:0
decoder.block.9.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.0.SelfAttention.k.weight cuda:0
decoder.block.9.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.0.SelfAttention.v.weight cuda:0
decoder.block.9.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.0.SelfAttention.o.weight cuda:0
decoder.block.9.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.0.layer_norm.weight cuda:0
decoder.block.9.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.9.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.9.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.9.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.9.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.1.layer_norm.weight cuda:0
decoder.block.9.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.9.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.9.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.9.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.9.layer.2.layer_norm.weight cuda:0
decoder.block.9.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.0.SelfAttention.q.weight cuda:0
decoder.block.10.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.0.SelfAttention.k.weight cuda:0
decoder.block.10.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.0.SelfAttention.v.weight cuda:0
decoder.block.10.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.0.SelfAttention.o.weight cuda:0
decoder.block.10.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.0.layer_norm.weight cuda:0
decoder.block.10.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.10.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.10.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.10.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.10.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.1.layer_norm.weight cuda:0
decoder.block.10.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.10.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.10.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.10.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.10.layer.2.layer_norm.weight cuda:0
decoder.block.10.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.0.SelfAttention.q.weight cuda:0
decoder.block.11.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.0.SelfAttention.k.weight cuda:0
decoder.block.11.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.0.SelfAttention.v.weight cuda:0
decoder.block.11.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.0.SelfAttention.o.weight cuda:0
decoder.block.11.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.0.layer_norm.weight cuda:0
decoder.block.11.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.11.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.11.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.11.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.11.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.1.layer_norm.weight cuda:0
decoder.block.11.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.11.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.11.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.11.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.11.layer.2.layer_norm.weight cuda:0
decoder.block.11.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.0.SelfAttention.q.weight cuda:0
decoder.block.12.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.0.SelfAttention.k.weight cuda:0
decoder.block.12.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.0.SelfAttention.v.weight cuda:0
decoder.block.12.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.0.SelfAttention.o.weight cuda:0
decoder.block.12.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.0.layer_norm.weight cuda:0
decoder.block.12.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.12.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.12.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.12.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.12.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.1.layer_norm.weight cuda:0
decoder.block.12.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.12.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.12.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.12.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.12.layer.2.layer_norm.weight cuda:0
decoder.block.12.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.0.SelfAttention.q.weight cuda:0
decoder.block.13.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.0.SelfAttention.k.weight cuda:0
decoder.block.13.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.0.SelfAttention.v.weight cuda:0
decoder.block.13.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.0.SelfAttention.o.weight cuda:0
decoder.block.13.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.0.layer_norm.weight cuda:0
decoder.block.13.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.13.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.13.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.13.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.13.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.1.layer_norm.weight cuda:0
decoder.block.13.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.13.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.13.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.13.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.13.layer.2.layer_norm.weight cuda:0
decoder.block.13.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.0.SelfAttention.q.weight cuda:0
decoder.block.14.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.0.SelfAttention.k.weight cuda:0
decoder.block.14.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.0.SelfAttention.v.weight cuda:0
decoder.block.14.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.0.SelfAttention.o.weight cuda:0
decoder.block.14.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.0.layer_norm.weight cuda:0
decoder.block.14.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.14.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.14.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.14.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.14.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.1.layer_norm.weight cuda:0
decoder.block.14.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.14.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.14.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.14.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.14.layer.2.layer_norm.weight cuda:0
decoder.block.14.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.0.SelfAttention.q.weight cuda:0
decoder.block.15.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.0.SelfAttention.k.weight cuda:0
decoder.block.15.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.0.SelfAttention.v.weight cuda:0
decoder.block.15.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.0.SelfAttention.o.weight cuda:0
decoder.block.15.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.0.layer_norm.weight cuda:0
decoder.block.15.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.15.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.15.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.15.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.15.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.1.layer_norm.weight cuda:0
decoder.block.15.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.15.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.15.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.15.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.15.layer.2.layer_norm.weight cuda:0
decoder.block.15.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.0.SelfAttention.q.weight cuda:0
decoder.block.16.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.0.SelfAttention.k.weight cuda:0
decoder.block.16.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.0.SelfAttention.v.weight cuda:0
decoder.block.16.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.0.SelfAttention.o.weight cuda:0
decoder.block.16.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.0.layer_norm.weight cuda:0
decoder.block.16.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.16.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.16.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.16.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.16.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.1.layer_norm.weight cuda:0
decoder.block.16.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.16.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.16.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.16.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.16.layer.2.layer_norm.weight cuda:0
decoder.block.16.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.0.SelfAttention.q.weight cuda:0
decoder.block.17.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.0.SelfAttention.k.weight cuda:0
decoder.block.17.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.0.SelfAttention.v.weight cuda:0
decoder.block.17.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.0.SelfAttention.o.weight cuda:0
decoder.block.17.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.0.layer_norm.weight cuda:0
decoder.block.17.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.17.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.17.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.17.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.17.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.1.layer_norm.weight cuda:0
decoder.block.17.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.17.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.17.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.17.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.17.layer.2.layer_norm.weight cuda:0
decoder.block.17.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.0.SelfAttention.q.weight cuda:0
decoder.block.18.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.0.SelfAttention.k.weight cuda:0
decoder.block.18.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.0.SelfAttention.v.weight cuda:0
decoder.block.18.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.0.SelfAttention.o.weight cuda:0
decoder.block.18.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.0.layer_norm.weight cuda:0
decoder.block.18.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.18.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.18.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.18.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.18.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.1.layer_norm.weight cuda:0
decoder.block.18.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.18.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.18.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.18.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.18.layer.2.layer_norm.weight cuda:0
decoder.block.18.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.0.SelfAttention.q.weight cuda:0
decoder.block.19.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.0.SelfAttention.k.weight cuda:0
decoder.block.19.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.0.SelfAttention.v.weight cuda:0
decoder.block.19.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.0.SelfAttention.o.weight cuda:0
decoder.block.19.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.0.layer_norm.weight cuda:0
decoder.block.19.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.19.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.19.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.19.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.19.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.1.layer_norm.weight cuda:0
decoder.block.19.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.19.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.19.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.19.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.19.layer.2.layer_norm.weight cuda:0
decoder.block.19.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.0.SelfAttention.q.weight cuda:0
decoder.block.20.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.0.SelfAttention.k.weight cuda:0
decoder.block.20.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.0.SelfAttention.v.weight cuda:0
decoder.block.20.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.0.SelfAttention.o.weight cuda:0
decoder.block.20.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.0.layer_norm.weight cuda:0
decoder.block.20.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.20.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.20.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.20.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.20.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.1.layer_norm.weight cuda:0
decoder.block.20.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.20.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.20.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.20.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.20.layer.2.layer_norm.weight cuda:0
decoder.block.20.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.0.SelfAttention.q.weight cuda:0
decoder.block.21.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.0.SelfAttention.k.weight cuda:0
decoder.block.21.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.0.SelfAttention.v.weight cuda:0
decoder.block.21.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.0.SelfAttention.o.weight cuda:0
decoder.block.21.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.0.layer_norm.weight cuda:0
decoder.block.21.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.21.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.21.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.21.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.21.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.1.layer_norm.weight cuda:0
decoder.block.21.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.21.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.21.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.21.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.21.layer.2.layer_norm.weight cuda:0
decoder.block.21.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.0.SelfAttention.q.weight cuda:0
decoder.block.22.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.0.SelfAttention.k.weight cuda:0
decoder.block.22.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.0.SelfAttention.v.weight cuda:0
decoder.block.22.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.0.SelfAttention.o.weight cuda:0
decoder.block.22.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.0.layer_norm.weight cuda:0
decoder.block.22.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.22.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.22.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.22.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.22.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.1.layer_norm.weight cuda:0
decoder.block.22.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.22.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.22.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.22.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.22.layer.2.layer_norm.weight cuda:0
decoder.block.22.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.0.SelfAttention.q.weight cuda:0
decoder.block.23.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.0.SelfAttention.k.weight cuda:0
decoder.block.23.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.0.SelfAttention.v.weight cuda:0
decoder.block.23.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.0.SelfAttention.o.weight cuda:0
decoder.block.23.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.0.layer_norm.weight cuda:0
decoder.block.23.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.1.EncDecAttention.q.weight cuda:0
decoder.block.23.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.1.EncDecAttention.k.weight cuda:0
decoder.block.23.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.1.EncDecAttention.v.weight cuda:0
decoder.block.23.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.1.EncDecAttention.o.weight cuda:0
decoder.block.23.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.1.layer_norm.weight cuda:0
decoder.block.23.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.2.DenseReluDense.wi_0.weight cuda:0
decoder.block.23.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.2.DenseReluDense.wi_1.weight cuda:0
decoder.block.23.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.2.DenseReluDense.wo.weight cuda:0
decoder.block.23.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.block.23.layer.2.layer_norm.weight cuda:0
decoder.block.23.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
decoder.final_layer_norm.weight cuda:0
decoder.final_layer_norm.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
lm_head.weight cuda:0
lm_head.weight Parameter containing:
tensor([], device='cuda:0', requires_grad=True)
**********
**********
**********
**********
**********
**********
module.shared.weight cuda:1
module.shared.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.0.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.0.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.0.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.0.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight cuda:1
module.encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.0.layer_norm.weight cuda:1
module.encoder.block.0.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.0.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.0.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.0.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.0.layer.1.layer_norm.weight cuda:1
module.encoder.block.0.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.1.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.1.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.1.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.1.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.0.layer_norm.weight cuda:1
module.encoder.block.1.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.1.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.1.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.1.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.1.layer.1.layer_norm.weight cuda:1
module.encoder.block.1.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.2.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.2.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.2.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.2.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.0.layer_norm.weight cuda:1
module.encoder.block.2.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.2.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.2.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.2.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.2.layer.1.layer_norm.weight cuda:1
module.encoder.block.2.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.3.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.3.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.3.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.3.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.0.layer_norm.weight cuda:1
module.encoder.block.3.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.3.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.3.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.3.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.3.layer.1.layer_norm.weight cuda:1
module.encoder.block.3.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.4.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.4.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.4.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.4.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.0.layer_norm.weight cuda:1
module.encoder.block.4.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.4.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.4.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.4.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.4.layer.1.layer_norm.weight cuda:1
module.encoder.block.4.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.5.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.5.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.5.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.5.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.0.layer_norm.weight cuda:1
module.encoder.block.5.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.5.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.5.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.5.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.5.layer.1.layer_norm.weight cuda:1
module.encoder.block.5.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.6.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.6.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.6.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.6.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.0.layer_norm.weight cuda:1
module.encoder.block.6.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.6.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.6.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.6.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.6.layer.1.layer_norm.weight cuda:1
module.encoder.block.6.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.7.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.7.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.7.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.7.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.0.layer_norm.weight cuda:1
module.encoder.block.7.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.7.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.7.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.7.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.7.layer.1.layer_norm.weight cuda:1
module.encoder.block.7.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.8.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.8.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.8.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.8.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.0.layer_norm.weight cuda:1
module.encoder.block.8.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.8.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.8.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.8.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.8.layer.1.layer_norm.weight cuda:1
module.encoder.block.8.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.9.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.9.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.9.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.9.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.0.layer_norm.weight cuda:1
module.encoder.block.9.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.9.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.9.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.9.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.9.layer.1.layer_norm.weight cuda:1
module.encoder.block.9.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.10.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.10.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.10.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.10.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.0.layer_norm.weight cuda:1
module.encoder.block.10.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.10.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.10.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.10.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.10.layer.1.layer_norm.weight cuda:1
module.encoder.block.10.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.11.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.11.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.11.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.11.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.0.layer_norm.weight cuda:1
module.encoder.block.11.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.11.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.11.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.11.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.11.layer.1.layer_norm.weight cuda:1
module.encoder.block.11.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.12.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.12.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.12.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.12.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.0.layer_norm.weight cuda:1
module.encoder.block.12.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.12.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.12.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.12.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.12.layer.1.layer_norm.weight cuda:1
module.encoder.block.12.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.13.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.13.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.13.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.13.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.0.layer_norm.weight cuda:1
module.encoder.block.13.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.13.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.13.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.13.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.13.layer.1.layer_norm.weight cuda:1
module.encoder.block.13.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.14.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.14.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.14.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.14.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.0.layer_norm.weight cuda:1
module.encoder.block.14.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.14.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.14.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.14.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.14.layer.1.layer_norm.weight cuda:1
module.encoder.block.14.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.15.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.15.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.15.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.15.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.0.layer_norm.weight cuda:1
module.encoder.block.15.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.15.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.15.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.15.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.15.layer.1.layer_norm.weight cuda:1
module.encoder.block.15.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.16.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.16.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.16.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.16.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.0.layer_norm.weight cuda:1
module.encoder.block.16.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.16.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.16.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.16.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.16.layer.1.layer_norm.weight cuda:1
module.encoder.block.16.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.17.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.17.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.17.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.17.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.0.layer_norm.weight cuda:1
module.encoder.block.17.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.17.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.17.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.17.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.17.layer.1.layer_norm.weight cuda:1
module.encoder.block.17.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.18.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.18.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.18.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.18.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.0.layer_norm.weight cuda:1
module.encoder.block.18.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.18.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.18.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.18.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.18.layer.1.layer_norm.weight cuda:1
module.encoder.block.18.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.19.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.19.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.19.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.19.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.0.layer_norm.weight cuda:1
module.encoder.block.19.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.19.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.19.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.19.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.19.layer.1.layer_norm.weight cuda:1
module.encoder.block.19.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.20.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.20.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.20.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.20.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.0.layer_norm.weight cuda:1
module.encoder.block.20.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.20.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.20.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.20.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.20.layer.1.layer_norm.weight cuda:1
module.encoder.block.20.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.21.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.21.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.21.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.21.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.0.layer_norm.weight cuda:1
module.encoder.block.21.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.21.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.21.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.21.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.21.layer.1.layer_norm.weight cuda:1
module.encoder.block.21.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.22.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.22.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.22.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.22.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.0.layer_norm.weight cuda:1
module.encoder.block.22.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.22.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.22.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.22.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.22.layer.1.layer_norm.weight cuda:1
module.encoder.block.22.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.0.SelfAttention.q.weight cuda:1
module.encoder.block.23.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.0.SelfAttention.k.weight cuda:1
module.encoder.block.23.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.0.SelfAttention.v.weight cuda:1
module.encoder.block.23.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.0.SelfAttention.o.weight cuda:1
module.encoder.block.23.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.0.layer_norm.weight cuda:1
module.encoder.block.23.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.1.DenseReluDense.wi_0.weight cuda:1
module.encoder.block.23.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.1.DenseReluDense.wi_1.weight cuda:1
module.encoder.block.23.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.1.DenseReluDense.wo.weight cuda:1
module.encoder.block.23.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.block.23.layer.1.layer_norm.weight cuda:1
module.encoder.block.23.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.encoder.final_layer_norm.weight cuda:1
module.encoder.final_layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.0.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.0.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.0.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.0.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight cuda:1
module.decoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.0.layer_norm.weight cuda:1
module.decoder.block.0.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.0.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.0.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.0.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.0.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.1.layer_norm.weight cuda:1
module.decoder.block.0.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.0.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.0.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.0.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.0.layer.2.layer_norm.weight cuda:1
module.decoder.block.0.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.1.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.1.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.1.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.1.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.0.layer_norm.weight cuda:1
module.decoder.block.1.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.1.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.1.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.1.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.1.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.1.layer_norm.weight cuda:1
module.decoder.block.1.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.1.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.1.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.1.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.1.layer.2.layer_norm.weight cuda:1
module.decoder.block.1.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.2.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.2.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.2.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.2.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.0.layer_norm.weight cuda:1
module.decoder.block.2.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.2.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.2.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.2.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.2.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.1.layer_norm.weight cuda:1
module.decoder.block.2.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.2.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.2.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.2.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.2.layer.2.layer_norm.weight cuda:1
module.decoder.block.2.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.3.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.3.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.3.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.3.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.0.layer_norm.weight cuda:1
module.decoder.block.3.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.3.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.3.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.3.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.3.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.1.layer_norm.weight cuda:1
module.decoder.block.3.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.3.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.3.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.3.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.3.layer.2.layer_norm.weight cuda:1
module.decoder.block.3.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.4.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.4.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.4.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.4.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.0.layer_norm.weight cuda:1
module.decoder.block.4.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.4.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.4.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.4.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.4.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.1.layer_norm.weight cuda:1
module.decoder.block.4.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.4.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.4.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.4.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.4.layer.2.layer_norm.weight cuda:1
module.decoder.block.4.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.5.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.5.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.5.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.5.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.0.layer_norm.weight cuda:1
module.decoder.block.5.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.5.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.5.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.5.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.5.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.1.layer_norm.weight cuda:1
module.decoder.block.5.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.5.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.5.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.5.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.5.layer.2.layer_norm.weight cuda:1
module.decoder.block.5.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.6.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.6.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.6.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.6.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.0.layer_norm.weight cuda:1
module.decoder.block.6.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.6.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.6.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.6.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.6.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.1.layer_norm.weight cuda:1
module.decoder.block.6.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.6.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.6.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.6.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.6.layer.2.layer_norm.weight cuda:1
module.decoder.block.6.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.7.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.7.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.7.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.7.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.0.layer_norm.weight cuda:1
module.decoder.block.7.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.7.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.7.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.7.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.7.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.1.layer_norm.weight cuda:1
module.decoder.block.7.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.7.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.7.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.7.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.7.layer.2.layer_norm.weight cuda:1
module.decoder.block.7.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.8.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.8.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.8.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.8.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.0.layer_norm.weight cuda:1
module.decoder.block.8.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.8.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.8.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.8.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.8.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.1.layer_norm.weight cuda:1
module.decoder.block.8.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.8.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.8.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.8.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.8.layer.2.layer_norm.weight cuda:1
module.decoder.block.8.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.9.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.9.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.9.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.9.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.0.layer_norm.weight cuda:1
module.decoder.block.9.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.9.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.9.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.9.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.9.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.1.layer_norm.weight cuda:1
module.decoder.block.9.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.9.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.9.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.9.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.9.layer.2.layer_norm.weight cuda:1
module.decoder.block.9.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.10.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.10.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.10.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.10.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.0.layer_norm.weight cuda:1
module.decoder.block.10.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.10.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.10.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.10.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.10.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.1.layer_norm.weight cuda:1
module.decoder.block.10.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.10.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.10.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.10.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.10.layer.2.layer_norm.weight cuda:1
module.decoder.block.10.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.11.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.11.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.11.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.11.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.0.layer_norm.weight cuda:1
module.decoder.block.11.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.11.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.11.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.11.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.11.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.1.layer_norm.weight cuda:1
module.decoder.block.11.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.11.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.11.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.11.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.11.layer.2.layer_norm.weight cuda:1
module.decoder.block.11.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.12.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.12.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.12.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.12.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.0.layer_norm.weight cuda:1
module.decoder.block.12.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.12.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.12.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.12.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.12.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.1.layer_norm.weight cuda:1
module.decoder.block.12.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.12.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.12.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.12.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.12.layer.2.layer_norm.weight cuda:1
module.decoder.block.12.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.13.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.13.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.13.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.13.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.0.layer_norm.weight cuda:1
module.decoder.block.13.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.13.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.13.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.13.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.13.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.1.layer_norm.weight cuda:1
module.decoder.block.13.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.13.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.13.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.13.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.13.layer.2.layer_norm.weight cuda:1
module.decoder.block.13.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.14.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.14.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.14.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.14.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.0.layer_norm.weight cuda:1
module.decoder.block.14.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.14.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.14.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.14.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.14.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.1.layer_norm.weight cuda:1
module.decoder.block.14.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.14.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.14.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.14.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.14.layer.2.layer_norm.weight cuda:1
module.decoder.block.14.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.15.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.15.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.15.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.15.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.0.layer_norm.weight cuda:1
module.decoder.block.15.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.15.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.15.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.15.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.15.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.1.layer_norm.weight cuda:1
module.decoder.block.15.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.15.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.15.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.15.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.15.layer.2.layer_norm.weight cuda:1
module.decoder.block.15.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.16.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.16.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.16.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.16.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.0.layer_norm.weight cuda:1
module.decoder.block.16.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.16.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.16.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.16.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.16.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.1.layer_norm.weight cuda:1
module.decoder.block.16.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.16.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.16.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.16.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.16.layer.2.layer_norm.weight cuda:1
module.decoder.block.16.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.17.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.17.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.17.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.17.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.0.layer_norm.weight cuda:1
module.decoder.block.17.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.17.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.17.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.17.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.17.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.1.layer_norm.weight cuda:1
module.decoder.block.17.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.17.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.17.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.17.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.17.layer.2.layer_norm.weight cuda:1
module.decoder.block.17.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.18.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.18.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.18.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.18.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.0.layer_norm.weight cuda:1
module.decoder.block.18.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.18.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.18.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.18.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.18.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.1.layer_norm.weight cuda:1
module.decoder.block.18.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.18.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.18.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.18.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.18.layer.2.layer_norm.weight cuda:1
module.decoder.block.18.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.19.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.19.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.19.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.19.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.0.layer_norm.weight cuda:1
module.decoder.block.19.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.19.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.19.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.19.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.19.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.1.layer_norm.weight cuda:1
module.decoder.block.19.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.19.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.19.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.19.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.19.layer.2.layer_norm.weight cuda:1
module.decoder.block.19.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.20.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.20.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.20.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.20.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.0.layer_norm.weight cuda:1
module.decoder.block.20.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.20.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.20.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.20.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.20.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.1.layer_norm.weight cuda:1
module.decoder.block.20.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.20.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.20.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.20.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.20.layer.2.layer_norm.weight cuda:1
module.decoder.block.20.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.21.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.21.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.21.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.21.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.0.layer_norm.weight cuda:1
module.decoder.block.21.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.21.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.21.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.21.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.21.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.1.layer_norm.weight cuda:1
module.decoder.block.21.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.21.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.21.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.21.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.21.layer.2.layer_norm.weight cuda:1
module.decoder.block.21.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.22.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.22.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.22.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.22.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.0.layer_norm.weight cuda:1
module.decoder.block.22.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.22.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.22.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.22.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.22.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.1.layer_norm.weight cuda:1
module.decoder.block.22.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.22.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.22.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.22.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.22.layer.2.layer_norm.weight cuda:1
module.decoder.block.22.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.0.SelfAttention.q.weight cuda:1
module.decoder.block.23.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.0.SelfAttention.k.weight cuda:1
module.decoder.block.23.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.0.SelfAttention.v.weight cuda:1
module.decoder.block.23.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.0.SelfAttention.o.weight cuda:1
module.decoder.block.23.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.0.layer_norm.weight cuda:1
module.decoder.block.23.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.1.EncDecAttention.q.weight cuda:1
module.decoder.block.23.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.1.EncDecAttention.k.weight cuda:1
module.decoder.block.23.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.1.EncDecAttention.v.weight cuda:1
module.decoder.block.23.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.1.EncDecAttention.o.weight cuda:1
module.decoder.block.23.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.1.layer_norm.weight cuda:1
module.decoder.block.23.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.2.DenseReluDense.wi_0.weight cuda:1
module.decoder.block.23.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.2.DenseReluDense.wi_1.weight cuda:1
module.decoder.block.23.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.2.DenseReluDense.wo.weight cuda:1
module.decoder.block.23.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.block.23.layer.2.layer_norm.weight cuda:1
module.decoder.block.23.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.decoder.final_layer_norm.weight cuda:1
module.decoder.final_layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
module.lm_head.weight cuda:1
module.lm_head.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
shared.weight cuda:1
shared.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.q.weight cuda:1
encoder.block.0.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.k.weight cuda:1
encoder.block.0.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.v.weight cuda:1
encoder.block.0.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.o.weight cuda:1
encoder.block.0.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight cuda:1
encoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.0.layer_norm.weight cuda:1
encoder.block.0.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.0.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.0.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.0.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.0.layer.1.layer_norm.weight cuda:1
encoder.block.0.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.0.SelfAttention.q.weight cuda:1
encoder.block.1.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.0.SelfAttention.k.weight cuda:1
encoder.block.1.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.0.SelfAttention.v.weight cuda:1
encoder.block.1.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.0.SelfAttention.o.weight cuda:1
encoder.block.1.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.0.layer_norm.weight cuda:1
encoder.block.1.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.1.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.1.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.1.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.1.layer.1.layer_norm.weight cuda:1
encoder.block.1.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.0.SelfAttention.q.weight cuda:1
encoder.block.2.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.0.SelfAttention.k.weight cuda:1
encoder.block.2.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.0.SelfAttention.v.weight cuda:1
encoder.block.2.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.0.SelfAttention.o.weight cuda:1
encoder.block.2.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.0.layer_norm.weight cuda:1
encoder.block.2.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.2.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.2.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.2.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.2.layer.1.layer_norm.weight cuda:1
encoder.block.2.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.0.SelfAttention.q.weight cuda:1
encoder.block.3.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.0.SelfAttention.k.weight[2023-10-31 22:48:24,955] [INFO] [launch.py:347:main] Process 1713963 exits successfully.
 cuda:1
encoder.block.3.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.0.SelfAttention.v.weight cuda:1
encoder.block.3.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.0.SelfAttention.o.weight cuda:1
encoder.block.3.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.0.layer_norm.weight cuda:1
encoder.block.3.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.3.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.3.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.3.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.3.layer.1.layer_norm.weight cuda:1
encoder.block.3.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.0.SelfAttention.q.weight cuda:1
encoder.block.4.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.0.SelfAttention.k.weight cuda:1
encoder.block.4.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.0.SelfAttention.v.weight cuda:1
encoder.block.4.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.0.SelfAttention.o.weight cuda:1
encoder.block.4.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.0.layer_norm.weight cuda:1
encoder.block.4.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.4.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.4.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.4.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.4.layer.1.layer_norm.weight cuda:1
encoder.block.4.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.0.SelfAttention.q.weight cuda:1
encoder.block.5.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.0.SelfAttention.k.weight cuda:1
encoder.block.5.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.0.SelfAttention.v.weight cuda:1
encoder.block.5.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.0.SelfAttention.o.weight cuda:1
encoder.block.5.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.0.layer_norm.weight cuda:1
encoder.block.5.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.5.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.5.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.5.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.5.layer.1.layer_norm.weight cuda:1
encoder.block.5.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.0.SelfAttention.q.weight cuda:1
encoder.block.6.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.0.SelfAttention.k.weight cuda:1
encoder.block.6.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.0.SelfAttention.v.weight cuda:1
encoder.block.6.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.0.SelfAttention.o.weight cuda:1
encoder.block.6.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.0.layer_norm.weight cuda:1
encoder.block.6.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.6.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.6.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.6.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.6.layer.1.layer_norm.weight cuda:1
encoder.block.6.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.0.SelfAttention.q.weight cuda:1
encoder.block.7.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.0.SelfAttention.k.weight cuda:1
encoder.block.7.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.0.SelfAttention.v.weight cuda:1
encoder.block.7.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.0.SelfAttention.o.weight cuda:1
encoder.block.7.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.0.layer_norm.weight cuda:1
encoder.block.7.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.7.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.7.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.7.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.7.layer.1.layer_norm.weight cuda:1
encoder.block.7.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.0.SelfAttention.q.weight cuda:1
encoder.block.8.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.0.SelfAttention.k.weight cuda:1
encoder.block.8.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.0.SelfAttention.v.weight cuda:1
encoder.block.8.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.0.SelfAttention.o.weight cuda:1
encoder.block.8.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.0.layer_norm.weight cuda:1
encoder.block.8.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.8.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.8.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.8.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.8.layer.1.layer_norm.weight cuda:1
encoder.block.8.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.0.SelfAttention.q.weight cuda:1
encoder.block.9.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.0.SelfAttention.k.weight cuda:1
encoder.block.9.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.0.SelfAttention.v.weight cuda:1
encoder.block.9.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.0.SelfAttention.o.weight cuda:1
encoder.block.9.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.0.layer_norm.weight cuda:1
encoder.block.9.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.9.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.9.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.9.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.9.layer.1.layer_norm.weight cuda:1
encoder.block.9.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.0.SelfAttention.q.weight cuda:1
encoder.block.10.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.0.SelfAttention.k.weight cuda:1
encoder.block.10.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.0.SelfAttention.v.weight cuda:1
encoder.block.10.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.0.SelfAttention.o.weight cuda:1
encoder.block.10.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.0.layer_norm.weight cuda:1
encoder.block.10.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.10.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.10.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.10.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.10.layer.1.layer_norm.weight cuda:1
encoder.block.10.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.0.SelfAttention.q.weight cuda:1
encoder.block.11.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.0.SelfAttention.k.weight cuda:1
encoder.block.11.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.0.SelfAttention.v.weight cuda:1
encoder.block.11.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.0.SelfAttention.o.weight cuda:1
encoder.block.11.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.0.layer_norm.weight cuda:1
encoder.block.11.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.11.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.11.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.11.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.11.layer.1.layer_norm.weight cuda:1
encoder.block.11.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.0.SelfAttention.q.weight cuda:1
encoder.block.12.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.0.SelfAttention.k.weight cuda:1
encoder.block.12.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.0.SelfAttention.v.weight cuda:1
encoder.block.12.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.0.SelfAttention.o.weight cuda:1
encoder.block.12.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.0.layer_norm.weight cuda:1
encoder.block.12.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.12.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.12.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.12.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.12.layer.1.layer_norm.weight cuda:1
encoder.block.12.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.0.SelfAttention.q.weight cuda:1
encoder.block.13.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.0.SelfAttention.k.weight cuda:1
encoder.block.13.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.0.SelfAttention.v.weight cuda:1
encoder.block.13.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.0.SelfAttention.o.weight cuda:1
encoder.block.13.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.0.layer_norm.weight cuda:1
encoder.block.13.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.13.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.13.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.13.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.13.layer.1.layer_norm.weight cuda:1
encoder.block.13.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.0.SelfAttention.q.weight cuda:1
encoder.block.14.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.0.SelfAttention.k.weight cuda:1
encoder.block.14.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.0.SelfAttention.v.weight cuda:1
encoder.block.14.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.0.SelfAttention.o.weight cuda:1
encoder.block.14.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.0.layer_norm.weight cuda:1
encoder.block.14.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.14.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.14.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.14.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.14.layer.1.layer_norm.weight cuda:1
encoder.block.14.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.0.SelfAttention.q.weight cuda:1
encoder.block.15.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.0.SelfAttention.k.weight cuda:1
encoder.block.15.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.0.SelfAttention.v.weight cuda:1
encoder.block.15.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.0.SelfAttention.o.weight cuda:1
encoder.block.15.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.0.layer_norm.weight cuda:1
encoder.block.15.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.15.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.15.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.15.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.15.layer.1.layer_norm.weight cuda:1
encoder.block.15.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.0.SelfAttention.q.weight cuda:1
encoder.block.16.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.0.SelfAttention.k.weight cuda:1
encoder.block.16.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.0.SelfAttention.v.weight cuda:1
encoder.block.16.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.0.SelfAttention.o.weight cuda:1
encoder.block.16.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.0.layer_norm.weight cuda:1
encoder.block.16.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.16.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.16.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.16.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.16.layer.1.layer_norm.weight cuda:1
encoder.block.16.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.0.SelfAttention.q.weight cuda:1
encoder.block.17.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.0.SelfAttention.k.weight cuda:1
encoder.block.17.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.0.SelfAttention.v.weight cuda:1
encoder.block.17.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.0.SelfAttention.o.weight cuda:1
encoder.block.17.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.0.layer_norm.weight cuda:1
encoder.block.17.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.17.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.17.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.17.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.17.layer.1.layer_norm.weight cuda:1
encoder.block.17.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.0.SelfAttention.q.weight cuda:1
encoder.block.18.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.0.SelfAttention.k.weight cuda:1
encoder.block.18.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.0.SelfAttention.v.weight cuda:1
encoder.block.18.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.0.SelfAttention.o.weight cuda:1
encoder.block.18.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.0.layer_norm.weight cuda:1
encoder.block.18.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.18.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.18.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.18.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.18.layer.1.layer_norm.weight cuda:1
encoder.block.18.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.0.SelfAttention.q.weight cuda:1
encoder.block.19.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.0.SelfAttention.k.weight cuda:1
encoder.block.19.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.0.SelfAttention.v.weight cuda:1
encoder.block.19.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.0.SelfAttention.o.weight cuda:1
encoder.block.19.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.0.layer_norm.weight cuda:1
encoder.block.19.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.19.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.19.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.19.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.19.layer.1.layer_norm.weight cuda:1
encoder.block.19.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.0.SelfAttention.q.weight cuda:1
encoder.block.20.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.0.SelfAttention.k.weight cuda:1
encoder.block.20.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.0.SelfAttention.v.weight cuda:1
encoder.block.20.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.0.SelfAttention.o.weight cuda:1
encoder.block.20.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.0.layer_norm.weight cuda:1
encoder.block.20.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.20.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.20.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.20.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.20.layer.1.layer_norm.weight cuda:1
encoder.block.20.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.0.SelfAttention.q.weight cuda:1
encoder.block.21.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.0.SelfAttention.k.weight cuda:1
encoder.block.21.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.0.SelfAttention.v.weight cuda:1
encoder.block.21.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.0.SelfAttention.o.weight cuda:1
encoder.block.21.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.0.layer_norm.weight cuda:1
encoder.block.21.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.21.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.21.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.21.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.21.layer.1.layer_norm.weight cuda:1
encoder.block.21.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.0.SelfAttention.q.weight cuda:1
encoder.block.22.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.0.SelfAttention.k.weight cuda:1
encoder.block.22.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.0.SelfAttention.v.weight cuda:1
encoder.block.22.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.0.SelfAttention.o.weight cuda:1
encoder.block.22.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.0.layer_norm.weight cuda:1
encoder.block.22.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.22.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.22.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.22.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.22.layer.1.layer_norm.weight cuda:1
encoder.block.22.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.0.SelfAttention.q.weight cuda:1
encoder.block.23.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.0.SelfAttention.k.weight cuda:1
encoder.block.23.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.0.SelfAttention.v.weight cuda:1
encoder.block.23.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.0.SelfAttention.o.weight cuda:1
encoder.block.23.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.0.layer_norm.weight cuda:1
encoder.block.23.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.1.DenseReluDense.wi_0.weight cuda:1
encoder.block.23.layer.1.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.1.DenseReluDense.wi_1.weight cuda:1
encoder.block.23.layer.1.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.1.DenseReluDense.wo.weight cuda:1
encoder.block.23.layer.1.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.block.23.layer.1.layer_norm.weight cuda:1
encoder.block.23.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
encoder.final_layer_norm.weight cuda:1
encoder.final_layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.q.weight cuda:1
decoder.block.0.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.k.weight cuda:1
decoder.block.0.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.v.weight cuda:1
decoder.block.0.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.o.weight cuda:1
decoder.block.0.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight cuda:1
decoder.block.0.layer.0.SelfAttention.relative_attention_bias.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.0.layer_norm.weight cuda:1
decoder.block.0.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.0.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.0.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.0.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.0.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.1.layer_norm.weight cuda:1
decoder.block.0.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.0.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.0.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.0.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.0.layer.2.layer_norm.weight cuda:1
decoder.block.0.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.0.SelfAttention.q.weight cuda:1
decoder.block.1.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.0.SelfAttention.k.weight cuda:1
decoder.block.1.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.0.SelfAttention.v.weight cuda:1
decoder.block.1.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.0.SelfAttention.o.weight cuda:1
decoder.block.1.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.0.layer_norm.weight cuda:1
decoder.block.1.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.1.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.1.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.1.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.1.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.1.layer_norm.weight cuda:1
decoder.block.1.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.1.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.1.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.1.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.1.layer.2.layer_norm.weight cuda:1
decoder.block.1.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.0.SelfAttention.q.weight cuda:1
decoder.block.2.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.0.SelfAttention.k.weight cuda:1
decoder.block.2.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.0.SelfAttention.v.weight cuda:1
decoder.block.2.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.0.SelfAttention.o.weight cuda:1
decoder.block.2.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.0.layer_norm.weight cuda:1
decoder.block.2.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.2.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.2.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.2.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.2.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.1.layer_norm.weight cuda:1
decoder.block.2.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.2.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.2.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.2.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.2.layer.2.layer_norm.weight cuda:1
decoder.block.2.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.0.SelfAttention.q.weight cuda:1
decoder.block.3.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.0.SelfAttention.k.weight cuda:1
decoder.block.3.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.0.SelfAttention.v.weight cuda:1
decoder.block.3.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.0.SelfAttention.o.weight cuda:1
decoder.block.3.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.0.layer_norm.weight cuda:1
decoder.block.3.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.3.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.3.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.3.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.3.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.1.layer_norm.weight cuda:1
decoder.block.3.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.3.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.3.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.3.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.3.layer.2.layer_norm.weight cuda:1
decoder.block.3.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.0.SelfAttention.q.weight cuda:1
decoder.block.4.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.0.SelfAttention.k.weight cuda:1
decoder.block.4.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.0.SelfAttention.v.weight cuda:1
decoder.block.4.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.0.SelfAttention.o.weight cuda:1
decoder.block.4.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.0.layer_norm.weight cuda:1
decoder.block.4.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.4.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.4.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.4.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.4.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.1.layer_norm.weight cuda:1
decoder.block.4.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.4.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.4.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.4.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.4.layer.2.layer_norm.weight cuda:1
decoder.block.4.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.0.SelfAttention.q.weight cuda:1
decoder.block.5.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.0.SelfAttention.k.weight cuda:1
decoder.block.5.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.0.SelfAttention.v.weight cuda:1
decoder.block.5.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.0.SelfAttention.o.weight cuda:1
decoder.block.5.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.0.layer_norm.weight cuda:1
decoder.block.5.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.5.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.5.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.5.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.5.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.1.layer_norm.weight cuda:1
decoder.block.5.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.5.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.5.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.5.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.5.layer.2.layer_norm.weight cuda:1
decoder.block.5.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.0.SelfAttention.q.weight cuda:1
decoder.block.6.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.0.SelfAttention.k.weight cuda:1
decoder.block.6.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.0.SelfAttention.v.weight cuda:1
decoder.block.6.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.0.SelfAttention.o.weight cuda:1
decoder.block.6.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.0.layer_norm.weight cuda:1
decoder.block.6.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.6.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.6.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.6.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.6.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.1.layer_norm.weight cuda:1
decoder.block.6.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.6.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.6.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.6.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.6.layer.2.layer_norm.weight cuda:1
decoder.block.6.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.0.SelfAttention.q.weight cuda:1
decoder.block.7.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.0.SelfAttention.k.weight cuda:1
decoder.block.7.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.0.SelfAttention.v.weight cuda:1
decoder.block.7.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.0.SelfAttention.o.weight cuda:1
decoder.block.7.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.0.layer_norm.weight cuda:1
decoder.block.7.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.7.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.7.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.7.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.7.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.1.layer_norm.weight cuda:1
decoder.block.7.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.7.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.7.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.7.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.7.layer.2.layer_norm.weight cuda:1
decoder.block.7.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.0.SelfAttention.q.weight cuda:1
decoder.block.8.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.0.SelfAttention.k.weight cuda:1
decoder.block.8.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.0.SelfAttention.v.weight cuda:1
decoder.block.8.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.0.SelfAttention.o.weight cuda:1
decoder.block.8.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.0.layer_norm.weight cuda:1
decoder.block.8.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.8.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.8.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.8.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.8.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.1.layer_norm.weight cuda:1
decoder.block.8.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.8.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.8.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.8.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.8.layer.2.layer_norm.weight cuda:1
decoder.block.8.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.0.SelfAttention.q.weight cuda:1
decoder.block.9.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.0.SelfAttention.k.weight cuda:1
decoder.block.9.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.0.SelfAttention.v.weight cuda:1
decoder.block.9.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.0.SelfAttention.o.weight cuda:1
decoder.block.9.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.0.layer_norm.weight cuda:1
decoder.block.9.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.9.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.9.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.9.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.9.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.1.layer_norm.weight cuda:1
decoder.block.9.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.9.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.9.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.9.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.9.layer.2.layer_norm.weight cuda:1
decoder.block.9.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.0.SelfAttention.q.weight cuda:1
decoder.block.10.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.0.SelfAttention.k.weight cuda:1
decoder.block.10.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.0.SelfAttention.v.weight cuda:1
decoder.block.10.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.0.SelfAttention.o.weight cuda:1
decoder.block.10.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.0.layer_norm.weight cuda:1
decoder.block.10.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.10.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.10.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.10.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.10.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.1.layer_norm.weight cuda:1
decoder.block.10.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.10.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.10.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.10.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.10.layer.2.layer_norm.weight cuda:1
decoder.block.10.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.0.SelfAttention.q.weight cuda:1
decoder.block.11.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.0.SelfAttention.k.weight cuda:1
decoder.block.11.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.0.SelfAttention.v.weight cuda:1
decoder.block.11.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.0.SelfAttention.o.weight cuda:1
decoder.block.11.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.0.layer_norm.weight cuda:1
decoder.block.11.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.11.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.11.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.11.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.11.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.1.layer_norm.weight cuda:1
decoder.block.11.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.11.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.11.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.11.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.11.layer.2.layer_norm.weight cuda:1
decoder.block.11.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.0.SelfAttention.q.weight cuda:1
decoder.block.12.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.0.SelfAttention.k.weight cuda:1
decoder.block.12.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.0.SelfAttention.v.weight cuda:1
decoder.block.12.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.0.SelfAttention.o.weight cuda:1
decoder.block.12.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.0.layer_norm.weight cuda:1
decoder.block.12.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.12.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.12.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.12.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.12.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.1.layer_norm.weight cuda:1
decoder.block.12.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.12.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.12.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.12.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.12.layer.2.layer_norm.weight cuda:1
decoder.block.12.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.0.SelfAttention.q.weight cuda:1
decoder.block.13.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.0.SelfAttention.k.weight cuda:1
decoder.block.13.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.0.SelfAttention.v.weight cuda:1
decoder.block.13.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.0.SelfAttention.o.weight cuda:1
decoder.block.13.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.0.layer_norm.weight cuda:1
decoder.block.13.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.13.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.13.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.13.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.13.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.1.layer_norm.weight cuda:1
decoder.block.13.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.13.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.13.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.13.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.13.layer.2.layer_norm.weight cuda:1
decoder.block.13.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.0.SelfAttention.q.weight cuda:1
decoder.block.14.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.0.SelfAttention.k.weight cuda:1
decoder.block.14.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.0.SelfAttention.v.weight cuda:1
decoder.block.14.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.0.SelfAttention.o.weight cuda:1
decoder.block.14.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.0.layer_norm.weight cuda:1
decoder.block.14.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.14.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.14.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.14.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.14.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.1.layer_norm.weight cuda:1
decoder.block.14.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.14.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.14.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.14.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.14.layer.2.layer_norm.weight cuda:1
decoder.block.14.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.0.SelfAttention.q.weight cuda:1
decoder.block.15.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.0.SelfAttention.k.weight cuda:1
decoder.block.15.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.0.SelfAttention.v.weight cuda:1
decoder.block.15.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.0.SelfAttention.o.weight cuda:1
decoder.block.15.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.0.layer_norm.weight cuda:1
decoder.block.15.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.15.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.15.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.15.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.15.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.1.layer_norm.weight cuda:1
decoder.block.15.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.15.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.15.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.15.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.15.layer.2.layer_norm.weight cuda:1
decoder.block.15.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.0.SelfAttention.q.weight cuda:1
decoder.block.16.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.0.SelfAttention.k.weight cuda:1
decoder.block.16.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.0.SelfAttention.v.weight cuda:1
decoder.block.16.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.0.SelfAttention.o.weight cuda:1
decoder.block.16.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.0.layer_norm.weight cuda:1
decoder.block.16.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.16.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.16.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.16.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.16.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.1.layer_norm.weight cuda:1
decoder.block.16.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.16.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.16.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.16.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.16.layer.2.layer_norm.weight cuda:1
decoder.block.16.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.0.SelfAttention.q.weight cuda:1
decoder.block.17.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.0.SelfAttention.k.weight cuda:1
decoder.block.17.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.0.SelfAttention.v.weight cuda:1
decoder.block.17.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.0.SelfAttention.o.weight cuda:1
decoder.block.17.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.0.layer_norm.weight cuda:1
decoder.block.17.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.17.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.17.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.17.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.17.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.1.layer_norm.weight cuda:1
decoder.block.17.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.17.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.17.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.17.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.17.layer.2.layer_norm.weight cuda:1
decoder.block.17.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.0.SelfAttention.q.weight cuda:1
decoder.block.18.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.0.SelfAttention.k.weight cuda:1
decoder.block.18.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.0.SelfAttention.v.weight cuda:1
decoder.block.18.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.0.SelfAttention.o.weight cuda:1
decoder.block.18.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.0.layer_norm.weight cuda:1
decoder.block.18.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.18.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.18.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.18.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.18.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.1.layer_norm.weight cuda:1
decoder.block.18.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.18.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.18.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.18.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.18.layer.2.layer_norm.weight cuda:1
decoder.block.18.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.0.SelfAttention.q.weight cuda:1
decoder.block.19.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.0.SelfAttention.k.weight cuda:1
decoder.block.19.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.0.SelfAttention.v.weight cuda:1
decoder.block.19.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.0.SelfAttention.o.weight cuda:1
decoder.block.19.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.0.layer_norm.weight cuda:1
decoder.block.19.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.19.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.19.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.19.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.19.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.1.layer_norm.weight cuda:1
decoder.block.19.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.19.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.19.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.19.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.19.layer.2.layer_norm.weight cuda:1
decoder.block.19.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.0.SelfAttention.q.weight cuda:1
decoder.block.20.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.0.SelfAttention.k.weight cuda:1
decoder.block.20.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.0.SelfAttention.v.weight cuda:1
decoder.block.20.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.0.SelfAttention.o.weight cuda:1
decoder.block.20.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.0.layer_norm.weight cuda:1
decoder.block.20.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.20.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.20.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.20.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.20.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.1.layer_norm.weight cuda:1
decoder.block.20.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.20.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.20.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.20.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.20.layer.2.layer_norm.weight cuda:1
decoder.block.20.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.0.SelfAttention.q.weight cuda:1
decoder.block.21.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.0.SelfAttention.k.weight cuda:1
decoder.block.21.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.0.SelfAttention.v.weight cuda:1
decoder.block.21.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.0.SelfAttention.o.weight cuda:1
decoder.block.21.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.0.layer_norm.weight cuda:1
decoder.block.21.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.21.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.21.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.21.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.21.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.1.layer_norm.weight cuda:1
decoder.block.21.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.21.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.21.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.21.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.21.layer.2.layer_norm.weight cuda:1
decoder.block.21.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.0.SelfAttention.q.weight cuda:1
decoder.block.22.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.0.SelfAttention.k.weight cuda:1
decoder.block.22.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.0.SelfAttention.v.weight cuda:1
decoder.block.22.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.0.SelfAttention.o.weight cuda:1
decoder.block.22.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.0.layer_norm.weight cuda:1
decoder.block.22.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.22.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.22.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.22.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.22.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.1.layer_norm.weight cuda:1
decoder.block.22.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.22.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.22.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.22.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.22.layer.2.layer_norm.weight cuda:1
decoder.block.22.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.0.SelfAttention.q.weight cuda:1
decoder.block.23.layer.0.SelfAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.0.SelfAttention.k.weight cuda:1
decoder.block.23.layer.0.SelfAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.0.SelfAttention.v.weight cuda:1
decoder.block.23.layer.0.SelfAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.0.SelfAttention.o.weight cuda:1
decoder.block.23.layer.0.SelfAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.0.layer_norm.weight cuda:1
decoder.block.23.layer.0.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.1.EncDecAttention.q.weight cuda:1
decoder.block.23.layer.1.EncDecAttention.q.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.1.EncDecAttention.k.weight cuda:1
decoder.block.23.layer.1.EncDecAttention.k.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.1.EncDecAttention.v.weight cuda:1
decoder.block.23.layer.1.EncDecAttention.v.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.1.EncDecAttention.o.weight cuda:1
decoder.block.23.layer.1.EncDecAttention.o.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.1.layer_norm.weight cuda:1
decoder.block.23.layer.1.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.2.DenseReluDense.wi_0.weight cuda:1
decoder.block.23.layer.2.DenseReluDense.wi_0.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.2.DenseReluDense.wi_1.weight cuda:1
decoder.block.23.layer.2.DenseReluDense.wi_1.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.2.DenseReluDense.wo.weight cuda:1
decoder.block.23.layer.2.DenseReluDense.wo.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.block.23.layer.2.layer_norm.weight cuda:1
decoder.block.23.layer.2.layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
decoder.final_layer_norm.weight cuda:1
decoder.final_layer_norm.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
lm_head.weight cuda:1
lm_head.weight Parameter containing:
tensor([], device='cuda:1', requires_grad=True)
**********
**********
**********
**********
**********
**********
[2023-10-31 22:48:26,959] [INFO] [launch.py:347:main] Process 1713964 exits successfully.
